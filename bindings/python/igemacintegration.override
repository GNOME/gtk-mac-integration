/* -*- Mode: C; c-basic-offset: 4 -*- */
%%
headers
#include <Python.h>
#include <pygtk/pygtk.h>
#include "../../src/ige-mac-menu.h"
#include "../../src/ige-mac-dock.h"
#include "../../src/ige-mac-bundle.h"
%%
modulename igemacintegration
%%
import gobject.GObject as PyGObject_Type
import gtk.MenuShell as PyGtkMenuShell_Type
import gtk.MenuItem as PyGtkMenuItem_Type
import gdk.GdkPixbuf as PyGdkPixbuf_Type
%%
ignore-glob
  *_get_type
%%
override ige_mac_menu_add_app_menu_group noargs
static PyObject*
_wrap_ige_mac_menu_add_app_menu_group (PyGObject *self)
{
    IgeMacMenuGroup *group;
    PyObject *ret;

    group = ige_mac_menu_add_app_menu_group ();

    ret = PyCObject_FromVoidPtr ((void *) group, NULL);

    return ret;
}
%%
override ige_mac_menu_add_app_menu_item kwargs
static PyObject*
_wrap_ige_mac_menu_add_app_menu_item (PyGObject *self, PyObject *args, PyObject *kwargs)
{
    static char *kwlist[] = { "group", "item", "label", NULL };
    PyObject *pygroup;
    PyObject *pyitem;
    char *label = NULL;
    IgeMacMenuGroup *group;
    GtkMenuItem *item;

    if (!PyArg_ParseTupleAndKeywords(args, kwargs, "OO!z:add_app_menu_item", kwlist,
                                     &pygroup, 
                                     &PyGtkMenuItem_Type, &pyitem,
                                     &label))
        return NULL;

    group = PyCObject_AsVoidPtr (pygroup);
    item = GTK_MENU_ITEM (pygobject_get (pyitem));

    ige_mac_menu_add_app_menu_item (group, item, label);

    Py_INCREF (Py_None);
    return Py_None;
}
